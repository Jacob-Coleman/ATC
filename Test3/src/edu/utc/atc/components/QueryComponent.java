package edu.utc.atc.components;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalSplitPanel;
import com.vaadin.ui.InlineDateField;
import com.vaadin.ui.Label;
import com.vaadin.ui.Table;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

public class QueryComponent extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	protected AbsoluteLayout mainLayout;
	@AutoGenerated
	protected HorizontalSplitPanel horizontalSplitPanel_1;
	@AutoGenerated
	protected Table quakeTable;
	@AutoGenerated
	protected VerticalLayout verticalLayout_1;
	@AutoGenerated
	protected Button submitButton;
	@AutoGenerated
	protected TextField minMagField;
	@AutoGenerated
	protected Label minmag_label;
	@AutoGenerated
	protected TextField radiusField;
	@AutoGenerated
	protected Label radial_label;
	@AutoGenerated
	protected TextField longField;
	@AutoGenerated
	protected Label long_label;
	@AutoGenerated
	protected TextField latField;
	@AutoGenerated
	protected Label lat_label;
	@AutoGenerated
	protected InlineDateField inlineDateField_2;
	/**
	 * 
	 */
	private static final long serialVersionUID = 8913196389988079007L;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public QueryComponent() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// horizontalSplitPanel_1
		horizontalSplitPanel_1 = buildHorizontalSplitPanel_1();
		mainLayout.addComponent(horizontalSplitPanel_1,
				"top:0.0px;right:160.0px;bottom:0.0px;left:0.0px;");
		
		return mainLayout;
	}

	@AutoGenerated
	private HorizontalSplitPanel buildHorizontalSplitPanel_1() {
		// common part: create layout
		horizontalSplitPanel_1 = new HorizontalSplitPanel();
		horizontalSplitPanel_1.setImmediate(false);
		horizontalSplitPanel_1.setWidth("100.0%");
		horizontalSplitPanel_1.setHeight("100.0%");
		
		// verticalLayout_1
		verticalLayout_1 = buildVerticalLayout_1();
		horizontalSplitPanel_1.addComponent(verticalLayout_1);
		
		// quakeTable
		quakeTable = new Table();
		quakeTable.setImmediate(false);
		quakeTable.setWidth("100.0%");
		quakeTable.setHeight("100.0%");
		horizontalSplitPanel_1.addComponent(quakeTable);
		
		return horizontalSplitPanel_1;
	}

	@AutoGenerated
	private VerticalLayout buildVerticalLayout_1() {
		// common part: create layout
		verticalLayout_1 = new VerticalLayout();
		verticalLayout_1.setImmediate(false);
		verticalLayout_1.setWidth("-1px");
		verticalLayout_1.setHeight("-1px");
		verticalLayout_1.setMargin(false);
		
		// inlineDateField_2
		inlineDateField_2 = new InlineDateField();
		inlineDateField_2.setImmediate(false);
		inlineDateField_2.setWidth("100.0%");
		inlineDateField_2.setHeight("100.46%");
		verticalLayout_1.addComponent(inlineDateField_2);
		verticalLayout_1.setExpandRatio(inlineDateField_2, 1.0f);
		
		// lat_label
		lat_label = new Label();
		lat_label.setImmediate(false);
		lat_label.setWidth("-1px");
		lat_label.setHeight("-1px");
		lat_label.setValue("Latitude");
		verticalLayout_1.addComponent(lat_label);
		
		// latField
		latField = new TextField();
		latField.setImmediate(false);
		latField.setWidth("-1px");
		latField.setHeight("-1px");
		latField.setInputPrompt("Latitude in degrees");
		verticalLayout_1.addComponent(latField);
		
		// long_label
		long_label = new Label();
		long_label.setImmediate(false);
		long_label.setWidth("-1px");
		long_label.setHeight("-1px");
		long_label.setValue("Longitude");
		verticalLayout_1.addComponent(long_label);
		
		// longField
		longField = new TextField();
		longField.setImmediate(false);
		longField.setWidth("-1px");
		longField.setHeight("-1px");
		longField.setInputPrompt("Longitude in degrees");
		verticalLayout_1.addComponent(longField);
		
		// radial_label
		radial_label = new Label();
		radial_label.setImmediate(false);
		radial_label.setWidth("-1px");
		radial_label.setHeight("-1px");
		radial_label.setValue("Radial distance of Interest");
		verticalLayout_1.addComponent(radial_label);
		
		// radiusField
		radiusField = new TextField();
		radiusField.setImmediate(false);
		radiusField.setWidth("-1px");
		radiusField.setHeight("-1px");
		radiusField.setInputPrompt("Radius in degrees");
		verticalLayout_1.addComponent(radiusField);
		
		// minmag_label
		minmag_label = new Label();
		minmag_label.setImmediate(false);
		minmag_label.setWidth("-1px");
		minmag_label.setHeight("-1px");
		minmag_label.setValue("Minimum Magnitude");
		verticalLayout_1.addComponent(minmag_label);
		
		// minMagField
		minMagField = new TextField();
		minMagField.setImmediate(false);
		minMagField.setWidth("-1px");
		minMagField.setHeight("-1px");
		minMagField.setInputPrompt("Minimum Magnitude");
		verticalLayout_1.addComponent(minMagField);
		
		// submitButton
		submitButton = new Button();
		submitButton.setCaption("Submit");
		submitButton.setImmediate(true);
		submitButton.setWidth("-1px");
		submitButton.setHeight("-1px");
		verticalLayout_1.addComponent(submitButton);
		
		return verticalLayout_1;
	}

}
